{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/quadtree/main.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "// ----------------------------------------------------------------------------------\r\n// -- Quadtree testing.\r\n// ----------------------------------------------------------------------------------\r\n\r\nvar map_size = 16;\r\nvar voxel_size = 40;\r\nvar screen_offset_x = 50;\r\nvar screen_offset_y = 50;\r\nvar clip_dist = 64;\r\n\r\nvar WIDTH = map_size * voxel_size + 2 * screen_offset_x;\r\nvar HEIGHT = map_size * voxel_size + 2 * screen_offset_y;\r\n\r\nvar origin_point = [0, 3.5];\r\n\r\nvar ray = {\r\n    vector: [1.0, 0.4],\r\n    direction: 0\r\n};\r\n\r\nray_init(ray);\r\n\r\n// N = 0 / E = 1 / S = 2 / W = 3\r\n// NW = 0 / NE = 1 / SW = 2 / SE = 3\r\nvar node_table = [\r\n    [-1, 1, 2, -1], // NW\r\n    [-1, -1, 3, 0], // NE\r\n    [0, 3, -1, -1], // SW\r\n    [1, -1, -1, 2], // SE\r\n];\r\n\r\n// Orientations: NW: 0, NE: 1, SW: 2, SE: 3\r\n\r\n// orientation nw\r\nvar start_node_table = [\r\n    [[0,1], [0,2]],   // NW\r\n    [[1,0], [1,3]],   // NE\r\n    [[2,3], [2,0]],   // SW\r\n    [[3,2], [3,1]]    // SE\r\n];\r\n\r\n// t order: tx0: 0, ty0: 1, txm: 2, tym: 3, tx1: 4, ty1: 5\r\n// Each row represents a node, each vector in a row represents the\r\n// x1 and y1 for a node (used to navigate between nodes).\r\nvar t_navigation_node_table = [\r\n    [[2,3], [4,3], [2,5], [4,5]], // NW\r\n    [[4,3], [2,3], [4,5], [2,5]], // NE\r\n    [[2,5], [4,5], [2,3], [4,3]], // SW\r\n    [[4,5], [2,5], [4,3], [2,3]] // SE\r\n];\r\n\r\n// [x0, y0, txm, tym, x1, y1]\r\nvar t_node_table = [\r\n    // NW direction\r\n    [\r\n        [0, 1, 2, 3], // NW node\r\n        [2, 1, 4, 3], // NE node\r\n        [0, 3, 2, 5], // SW node\r\n        [2, 3, 4, 5], // SE node\r\n    ],\r\n    // NE direction\r\n    [\r\n        [2, 1, 4, 3], // NW node\r\n        [0, 1, 2, 3], // NE node\r\n        [2, 3, 4, 5], // SW node\r\n        [0, 3, 2, 5], // SE node\r\n    ],\r\n    // SW direction\r\n    [\r\n        [0, 3, 2, 5], // NW node\r\n        [2, 3, 4, 5], // NE node\r\n        [0, 1, 2, 3], // SW node\r\n        [2, 1, 4, 3], // SE node\r\n    ],\r\n    // SE direction\r\n    [\r\n        [2, 3, 4, 5], // NW node\r\n        [0, 3, 2, 5], // NE node\r\n        [2, 1, 4, 3], // SW node\r\n        [0, 1, 2, 3], // SE node\r\n    ]\r\n];\r\n\r\n// First = horizontal move, second = vertical move\r\nvar traverse_table = [\r\n    [[1,2], [-1,3], [3,-1], [-1,-1]], // NW\r\n    [[-1,2], [0,3], [-1,-1], [2,-1]], // NE\r\n    [[1,-1], [-1,-1], [3,0], [-1,1]], // SW\r\n    [[-1,-1], [0,-1], [-1,0], [2,1]] // SE\r\n];\r\n\r\nvar screen = document.getElementById('3dbase');\r\nvar screen_ctx = screen.getContext('2d');\r\n\r\nscreen.width = WIDTH;\r\nscreen.height = HEIGHT;\r\n\r\nfunction node_name(node)\r\n{\r\n    var names = ['NW', 'NE', 'SW', 'SE'];\r\n    return names[node];\r\n}\r\n\r\nfunction get_start_node(ray_direction, t)\r\n{\r\n    var r = t[0] < t[1] ? 0 : 1;\r\n    var c = 0;\r\n\r\n    if ((r == 0 && t[2] < t[1]) || (r == 1 && t[3] < t[0]))\r\n        c = 1;\r\n\r\n    return start_node_table[ray_direction][r][c];\r\n}\r\n\r\nfunction normalize(ray)\r\n{\r\n    var one_over_len = 1.0 / Math.sqrt(ray[0] * ray[0] + ray[1] * ray[1]);\r\n\r\n    ray[0] *= one_over_len;\r\n    ray[1] *= one_over_len;\r\n}\r\n\r\nfunction ray_init(ray)\r\n{\r\n    normalize(ray.vector);\r\n\r\n    ray.odx = 1.0 / ray.vector[0];\r\n    ray.ody = 1.0 / ray.vector[1];\r\n\r\n    ray.direction = 0;\r\n\r\n    if (ray.vector[0] >= 0 && ray.vector[1] >= 0)\r\n        ray.direction = 0;\r\n    else if (ray.vector[0] >= 0 && ray.vector[1] < 0)\r\n        ray.direction = 2;\r\n    else if (ray.vector[0] < 0 && ray.vector[1] >= 0)\r\n        ray.direction = 1;\r\n    else if (ray.vector[0] < 0 && ray.vector[1] < 0)\r\n        ray.direction = 3;\r\n}\r\n\r\nfunction quad_node_navigate(ray_direction, t)\r\n{\r\n    var start_node = get_start_node(ray_direction, t);\r\n    var nodes = [start_node];\r\n\r\n    while (start_node != -1)\r\n    {\r\n        var indices = t_navigation_node_table[ray_direction][start_node];\r\n        var c = 0;\r\n\r\n        if (t[indices[1]] < t[indices[0]])\r\n            c = 1;\r\n\r\n        start_node = traverse_table[ray_direction][start_node][c];\r\n\r\n        if (start_node != -1)\r\n            nodes.push(start_node);\r\n    }\r\n\r\n    return nodes;\r\n}\r\n\r\n/**\r\n * @param {Array} point Start point\r\n * @param {Object} ray Direction vector\r\n * @param {Number} x0\r\n * @param {Number} x1\r\n * @param {Number} y0\r\n * @param {Number} y1\r\n * @return {Array}\r\n */\r\nfunction ray_intersection(point, ray, x0, x1, y0, y1)\r\n{\r\n    var t = 0;\r\n\r\n    if (ray.vector[0] < 0)\r\n    {\r\n        t = x0;\r\n        x0 = x1;\r\n        x1 = t;\r\n    }\r\n\r\n    if (ray.vector[1] < 0)\r\n    {\r\n        t = y0;\r\n        y0 = y1;\r\n        y1 = t;\r\n    }\r\n\r\n    var tx0 = (x0 - point[0]) * ray.odx;\r\n    var tx1 = (x1 - point[0]) * ray.odx;\r\n\r\n    var ty0 = (y0 - point[1]) * ray.ody;\r\n    var ty1 = (y1 - point[1]) * ray.ody;\r\n\r\n    var txm = (tx1 + tx0) * 0.5;\r\n    var tym = (ty1 + ty0) * 0.5;\r\n\r\n    if (ray.vector[0] == 0)\r\n    {\r\n        tx0 = -Infinity;\r\n        tx1 = Infinity;\r\n        txm = Infinity;\r\n    }\r\n\r\n    if (ray.vector[1] == 0)\r\n    {\r\n        ty0 = -Infinity;\r\n        ty1 = Infinity;\r\n        tym = Infinity;\r\n    }\r\n\r\n    return [tx0, ty0, txm, tym, tx1, ty1];\r\n}\r\n\r\nfunction intersects(t) {\r\n    return t[0] <= t[5]  && t[1] <= t[4];\r\n}\r\n\r\nfunction ray_point(start, ray, t)\r\n{\r\n    var res = [\r\n        start[0] + ray[0] * t,\r\n        start[1] + ray[1] * t\r\n    ];\r\n\r\n    return res;\r\n}\r\n\r\nfunction make_power_of_two(v)\r\n{\r\n    if (v < 0)\r\n        return 0;\r\n\r\n    var res = 1;\r\n    var count = 0;\r\n\r\n    while (res < v)\r\n        res = res << 1;\r\n\r\n    return res;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n// -- Quadtree routines.\r\n// ----------------------------------------------------------------------------------\r\n\r\n// aabb = xmin, ymin, xmax, ymax\r\nfunction quad_aabb_intersects(aabb1, aabb2)\r\n{\r\n    var check = ((aabb2[0] >= aabb1[0] && aabb2[0] < aabb1[2]) || (aabb2[2] >= aabb1[0] && aabb2[2] < aabb1[2])) &&\r\n                ((aabb2[1] >= aabb1[1] && aabb2[1] < aabb1[3]) || (aabb2[3] >= aabb1[1] && aabb2[3] < aabb1[3]));\r\n\r\n    return check;\r\n}\r\n\r\nfunction quad_aabb_has_point(aabb, point) {\r\n    return aabb[0] >= point[0] && point[0] <= aabb[2] && aabb[1] >= point[1] && point[1] <= aabb[3];\r\n}\r\n\r\nfunction quad_point_find_quadrant(quad, point)\r\n{\r\n    var res = [];\r\n\r\n    if (quad.root.count)\r\n    {\r\n        for (var i = 0; i < 4; ++i)\r\n        {\r\n            var node_index = quad.root.children[i];\r\n            var node = quad.nodes[node_index];\r\n\r\n            if (node && quad_aabb_has_point(node.aabb, point))\r\n                res.push(node_index);\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nfunction quad_aabb_has_voxel(aabb, voxel) {\r\n    return (aabb[0] <= voxel[0] && (voxel[0] + 1) <= aabb[2] && aabb[1] <= voxel[1] && (voxel[1] + 1) <= aabb[3]);\r\n}\r\n\r\nfunction quad_get_node(quad, aabb)\r\n{\r\n    var shift = quad.depth - 1;\r\n\r\n    var nodex = point[0] >> shift;\r\n    var nodey = point[1] >> shift;\r\n}\r\n\r\nfunction quad_node_split(quad, index)\r\n{\r\n    var parent = quad.nodes[index];\r\n\r\n    var fsize = parent.aabb[2] - parent.aabb[0];\r\n    var hsize = fsize >> 1;\r\n    var is_leaf = hsize == 1;\r\n    var depth = parent.depth + 1;\r\n\r\n    var dims = [\r\n        [parent.aabb[0], parent.aabb[1], parent.aabb[0] + hsize, parent.aabb[1] + hsize],\r\n        [parent.aabb[0] + hsize, parent.aabb[1], parent.aabb[0] + fsize, parent.aabb[1] + hsize],\r\n        [parent.aabb[0], parent.aabb[1] + hsize, parent.aabb[0] + hsize, parent.aabb[1] + fsize],\r\n        [parent.aabb[0] + hsize, parent.aabb[1] + hsize, parent.aabb[0] + fsize, parent.aabb[1] + fsize]\r\n    ]\r\n\r\n    var indices = [-1, -1, -1, -1];\r\n\r\n    for (var i = 0; i < 4; ++i)\r\n    {\r\n        if (quad.empty.length)\r\n        {\r\n            var node_index = quad.empty.pop();\r\n            var node = quad.nodes[node_index];\r\n\r\n            indices[i] = node_index;\r\n\r\n            node.index = i;\r\n            node.depth = depth;\r\n            node.parent = index;\r\n            node.aabb = dims[i];\r\n            node.leaf = is_leaf;\r\n            node.count = 0;\r\n            node.data = null;\r\n            node.children = [-1, -1, -1, -1];\r\n        }\r\n        else\r\n        {\r\n            indices[i] = quad.nodes.length;\r\n\r\n            quad.nodes.push({\r\n                index: i,\r\n                depth: depth,\r\n                parent: index,\r\n                aabb: dims[i],\r\n                leaf: is_leaf,\r\n                count: 0,\r\n                data: null,\r\n                children: [-1, -1, -1, -1],\r\n            });\r\n        }\r\n    }\r\n\r\n    parent.children[0] = indices[0];\r\n    parent.children[1] = indices[1];\r\n    parent.children[2] = indices[2];\r\n    parent.children[3] = indices[3];\r\n}\r\n\r\nfunction quad_voxel_exists(quad, voxel)\r\n{\r\n    var queue = [quad.nodes[0]];\r\n\r\n    while (queue.length)\r\n    {\r\n        var parent_node = queue.pop();\r\n\r\n        if (quad_aabb_has_voxel(parent_node.aabb, voxel))\r\n        {\r\n            if (parent_node.leaf)\r\n                return true;\r\n\r\n            for (var i = 0; i < 4; ++i)\r\n            {\r\n                var child_node = quad.nodes[parent_node.children[i]];\r\n\r\n                if (child_node)\r\n                    queue.push(child_node);\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction quad_add_voxel(quad, voxel)\r\n{\r\n    var root = quad.nodes[0];\r\n    var queue = [];\r\n\r\n    if (quad_voxel_exists(quad, voxel))\r\n        return;\r\n\r\n    if (root && quad_aabb_has_voxel(root.aabb, voxel))\r\n    {\r\n        if (!root.count)\r\n            quad_node_split(quad, 0);\r\n\r\n        for (var i = 0; i < 4; ++i) {\r\n            queue.push(root.children[i]);\r\n        }\r\n\r\n        root.count++;\r\n    }\r\n\r\n    while (queue.length)\r\n    {\r\n        var node_index = queue.pop();\r\n        var node = quad.nodes[node_index];\r\n\r\n        if (node && quad_aabb_has_voxel(node.aabb, voxel))\r\n        {\r\n            if (node.leaf)\r\n            {\r\n                node.data = [voxel[0], voxel[1]];\r\n                node.count = 1;\r\n            }\r\n            else\r\n            {\r\n                if (!node.count)\r\n                    quad_node_split(quad, node_index);\r\n\r\n                for (var i = 0; i < 4; ++i) {\r\n                    queue.push(node.children[i]);\r\n                }\r\n\r\n                node.count++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction quad_remove_voxel(quad, voxel)\r\n{\r\n    var queue = [0];\r\n\r\n    while (queue.length)\r\n    {\r\n        var node_index = queue.pop();\r\n        var node = quad.nodes[node_index];\r\n\r\n        if (node && quad_aabb_has_voxel(node.aabb, voxel))\r\n        {\r\n            if (node.leaf)\r\n            {\r\n                var parent = quad.nodes[node.parent];\r\n\r\n                if (!parent.count)\r\n                {\r\n                    for (var i = 0; i < 4; ++i)\r\n                    {\r\n                        var child_node = quad.nodes[parent.children[i]];\r\n\r\n                        quad.empty.push(parent.children[i]);\r\n                        parent.children[i] = -1;\r\n\r\n                        child_node.data = null;\r\n                        child_node.count = 0;\r\n                        child_node.parent = -1;\r\n                        child_node.leaf = false;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    // quad.empty.push(parent.children[node.index]);\r\n                    // parent.children[node.index] = -1;\r\n\r\n                    node.data = null;\r\n                    node.count = 0;\r\n                    // node.parent = -1;\r\n                    // node.leaf = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                node.count--;\r\n\r\n                for (var i = 0; i < 4; ++i) {\r\n                    queue.push(node.children[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction quad_voxel_list(quad)\r\n{\r\n    var list = [];\r\n    var queue = [0];\r\n\r\n    while (queue.length)\r\n    {\r\n        var node_index = queue.pop();\r\n        var node = quad.nodes[node_index];\r\n\r\n        if (node && node.count)\r\n        {\r\n            if (node.leaf)\r\n                list.push(node.data);\r\n            else\r\n            {\r\n                queue.push(node.children[0]);\r\n                queue.push(node.children[1]);\r\n                queue.push(node.children[2]);\r\n                queue.push(node.children[3]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n// t values order: [tx0, ty0, txm, tym, tx1, ty1]\r\nfunction quad_traverse_recursive(quad, ray, parent_node, parent_t, intersection_list)\r\n{\r\n    // TODO(gabic): Trebuie adaugat si wrap-ul cu verificarea pentru punctul de origine,\r\n    // plus verificarea de distanta max(x0, y0).\r\n\r\n    if (intersects(parent_t))\r\n    {\r\n        if (parent_node.leaf)\r\n        {\r\n            intersection_list.push(parent_node.aabb);\r\n            return true;\r\n        }\r\n\r\n        var node_order = quad_node_navigate(ray.direction, parent_t);\r\n\r\n        for (var i = 0; i < node_order.length; ++i)\r\n        {\r\n            var node_index = parent_node.children[node_order[i]];\r\n            var child_node = quad.nodes[node_index];\r\n\r\n            if (!child_node || !child_node.count)\r\n                continue;\r\n\r\n            var child_node_t = new Array(6);\r\n            var t_indices = t_node_table[ray.direction][node_order[i]];\r\n\r\n            // Generate the child node t values based on the parent node.\r\n            child_node_t[0] = parent_t[t_indices[0]];\r\n            child_node_t[1] = parent_t[t_indices[1]];\r\n            child_node_t[4] = parent_t[t_indices[2]];\r\n            child_node_t[5] = parent_t[t_indices[3]];\r\n\r\n            child_node_t[2] = (child_node_t[0] + child_node_t[4]) * 0.5;\r\n            child_node_t[3] = (child_node_t[1] + child_node_t[5]) * 0.5;\r\n\r\n            if (ray.vector[0] == 0)\r\n                child_node_t[2] = Infinity;\r\n\r\n            if (ray.vector[1] == 0)\r\n                child_node_t[3] = Infinity;\r\n\r\n            var found = quad_traverse_recursive(quad, ray, child_node, child_node_t, intersection_list);\r\n\r\n            if (quad.all && found)\r\n                return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction quad_traverse_horizontal_r(quad, ray, origin_point, parent_node, intersection_list)\r\n{\r\n    if (origin_point[1] >= parent_node.aabb[1] && origin_point[1] < parent_node.aabb[3])\r\n    {\r\n        var nodes = [1, 0];\r\n\r\n        // Left to right.\r\n        if (ray.vector[0] >= 0)\r\n            nodes = [0, 1];\r\n\r\n        for (var i = 0; i < 2; ++i)\r\n        var child_node_index = parent_node.children[nodes[0]];\r\n        var child_node = quad.nodes[child_node_index];\r\n\r\n        // if (child_node)\r\n\r\n    }\r\n}\r\n\r\nfunction quad_traverse_vertical_r(quad, origin_point)\r\n{}\r\n\r\n// Finds the closest voxel intersection.\r\nfunction quad_find_intersection(quad, ray, origin_point)\r\n{\r\n    var intersection_list = [];\r\n    var root_node = quad.nodes[quad.root];\r\n\r\n    // Compute the t values only for the root node, subsequent t values will be\r\n    // derived from the root.\r\n    var root_node_intersection = ray_intersection(origin_point, ray,\r\n        root_node.aabb[0],\r\n        root_node.aabb[2],\r\n        root_node.aabb[1],\r\n        root_node.aabb[3]);\r\n\r\n    // Vertical ray.\r\n    if (ray.vector[0] == 0)\r\n    {}\r\n    // Horizontal ray.\r\n    else if (ray.vector[1] == 0)\r\n    {}\r\n    else\r\n        quad_traverse_recursive(quad, ray, root_node, root_node_intersection, intersection_list);\r\n\r\n    return intersection_list;\r\n}\r\n\r\nfunction quad_create(size)\r\n{\r\n    var Quad = {\r\n        size: make_power_of_two(size),\r\n        depth: 0,\r\n        nodes: [],\r\n        empty: [],\r\n        root: null,\r\n        all: false\r\n    };\r\n\r\n    Quad.depth = Math.log2(Quad.size);\r\n\r\n    // TODO(gabic): Posibilitatea sa refolosesc un nod sters.\r\n    Quad.nodes.push({\r\n        index: 0,\r\n        count: 0,\r\n        depth: 0,\r\n        parent: -1,\r\n        aabb: [0, 0, Quad.size, Quad.size],\r\n        leaf: false,\r\n        children: [-1, -1, -1, -1]\r\n    });\r\n\r\n    Quad.root = 0;\r\n\r\n    return Quad;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n// -- Drawing routines.\r\n// ----------------------------------------------------------------------------------\r\n\r\nfunction draw_grid(ctx, size, voxel_size)\r\n{\r\n    var full_length = size * voxel_size;\r\n\r\n    var sx = screen_offset_x;\r\n    var sy = screen_offset_y;\r\n\r\n    ctx.save();\r\n\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = '#999';\r\n    ctx.lineJoin = 'miter';\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(sx, sy);\r\n    ctx.lineTo(sx, sy + full_length);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(sx + full_length, sy);\r\n    ctx.lineTo(sx + full_length, sy + full_length);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(sx, sy);\r\n    ctx.lineTo(sx + full_length, sy);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(sx, sy + full_length);\r\n    ctx.lineTo(sx + full_length, sy + full_length);\r\n    ctx.stroke();\r\n\r\n    ctx.font = \"14px Tahoma\";\r\n    ctx.fillStyle = '#999';\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#ccc';\r\n    ctx.setLineDash([2]);\r\n    sx = screen_offset_x + voxel_size;\r\n\r\n    for (var x = 1; x < size; ++x)\r\n    {\r\n        ctx.beginPath();\r\n        ctx.moveTo(sx, sy);\r\n        ctx.lineTo(sx, sy + full_length);\r\n        ctx.stroke();\r\n\r\n        sx += voxel_size;\r\n    }\r\n\r\n    sx = screen_offset_x;\r\n    sy = screen_offset_y + voxel_size;\r\n\r\n    for (var y = 1; y < size; ++y)\r\n    {\r\n        ctx.beginPath();\r\n        ctx.moveTo(sx, sy);\r\n        ctx.lineTo(sx + full_length, sy);\r\n        ctx.stroke();\r\n\r\n        sy += voxel_size;\r\n    }\r\n\r\n    sx = screen_offset_x;\r\n    sy = screen_offset_y;\r\n\r\n    for (var x = 0; x <= size; ++x)\r\n    {\r\n        ctx.fillText(x, sx - 4, sy - 14);\r\n        sx += voxel_size;\r\n    }\r\n\r\n    sx = screen_offset_x;\r\n\r\n    for (var y = 0; y <= size; ++y)\r\n    {\r\n        ctx.fillText(y, sx - 24, sy + 5);\r\n        sy += voxel_size;\r\n    }\r\n\r\n    ctx.restore();\r\n}\r\n\r\nfunction draw_ray(ctx, ray, origin_point)\r\n{}\r\n\r\nfunction draw_voxels(ctx, voxel_list)\r\n{\r\n    ctx.save();\r\n\r\n    for (var i = 0; i < voxel_list.length; ++i)\r\n    {\r\n        var voxel = voxel_list[i];\r\n\r\n        var vx = screen_offset_x + voxel[0] * voxel_size;\r\n        var vy = screen_offset_y + voxel[1] * voxel_size;\r\n\r\n        ctx.fillStyle = '#72BC70';\r\n        ctx.strokeStyle = '#38674D';\r\n        ctx.lineWidth = 2;\r\n\r\n        ctx.fillRect(vx, vy, voxel_size, voxel_size);\r\n        ctx.strokeRect(vx, vy, voxel_size, voxel_size);\r\n    }\r\n\r\n    ctx.restore();\r\n}\r\n\r\nfunction draw_intersections(ctx, intersections)\r\n{\r\n    ctx.save();\r\n\r\n    for (var i = 0; i < intersections.length; ++i)\r\n    {\r\n        var voxel_aabb = intersections[i];\r\n        var voxel = [voxel_aabb[0], voxel_aabb[1]];\r\n\r\n        var vx = screen_offset_x + voxel[0] * voxel_size;\r\n        var vy = screen_offset_y + voxel[1] * voxel_size;\r\n\r\n        ctx.fillStyle = '#8A1815';\r\n        ctx.strokeStyle = '#3C1515';\r\n        ctx.lineWidth = 2;\r\n\r\n        ctx.fillRect(vx, vy, voxel_size, voxel_size);\r\n        ctx.strokeRect(vx, vy, voxel_size, voxel_size);\r\n\r\n        // Draw the intersection edge.\r\n    }\r\n\r\n    ctx.restore();\r\n}\r\n\r\nfunction draw_quadtree_splits(ctx, quadtree)\r\n{}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\nvar quadtree = quad_create(map_size);\r\n// var quads = quad_point_find_quadrant(quadtree, [1.4, 5.6]);\r\n\r\nfunction generate_random_voxels(quad, count)\r\n{\r\n    for (var i = 0; i < count; ++i)\r\n    {\r\n        var row = (Math.random() * quad.size) | 0;\r\n        var col = (Math.random() * quad.size) | 0;\r\n\r\n        quad_add_voxel(quad, [col, row]);\r\n    }\r\n}\r\n\r\ngenerate_random_voxels(quadtree, 128);\r\n\r\nvar voxel_list = quad_voxel_list(quadtree);\r\n\r\nfunction render(timestamp)\r\n{\r\n    var t0 = performance.now();\r\n    screen_ctx.fillStyle = '#fff';\r\n    screen_ctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n    var t1 = performance.now();\r\n    var intersections = [];\r\n\r\n    var w = 1;\r\n    var h = 1;\r\n\r\n    for (var i = 0; i < w * h; ++i) {\r\n        intersections = quad_find_intersection(quadtree, ray, origin_point, false);\r\n    }\r\n\r\n    var t2 = performance.now();\r\n    console.log('intersection:', t2-t1);\r\n\r\n    draw_grid(screen_ctx, quadtree.size, voxel_size);\r\n    draw_voxels(screen_ctx, voxel_list);\r\n    draw_intersections(screen_ctx, intersections);\r\n    draw_ray(screen_ctx, ray, origin_point);\r\n\r\n    var t3 = performance.now();\r\n    console.log('ms:', t3 - t0);\r\n\r\n    window.requestAnimationFrame(render);\r\n}\r\n\r\nwindow.requestAnimationFrame(render);\r\n"
  ]
}